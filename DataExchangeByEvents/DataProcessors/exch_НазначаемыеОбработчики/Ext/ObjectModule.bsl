//Проверка необходимости выполнять обмен по событию
Функция ВыполнятьОбменПоСобытию(Источник, Отказ)
	имяСвойсваУзлыПолучателиСобытия = exch_ОбменДаннымиНастройки.ИмяСвойстваУзлыПолучателиСобытия();
	Если Отказ 
		ИЛИ Источник.ДополнительныеСвойства.Свойство(имяСвойсваУзлыПолучателиСобытия) = Ложь			
		ИЛИ (
				ТипЗнч(Источник.ДополнительныеСвойства[имяСвойсваУзлыПолучателиСобытия]) = Тип("Массив")
			 	И Источник.ДополнительныеСвойства[имяСвойсваУзлыПолучателиСобытия].Количество() = 0
			 )
	Тогда
		Возврат Ложь;		
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

#Область ОбработчикиПодписокНаСобытия

// Процедура-обработчик события "ПриЗаписи" ссылочных типов данных (кроме документов) 
// для механизма отправки объектов в узлы
// с настройкой событийной передачи данных
//
// Параметры:
//  ИмяПланаОбмена – Строка – имя плана обмена, для которого выполняется механизм регистрации
//  Источник       - источник события, кроме типа ДокументОбъект
//  Отказ          - Булево - флаг отказа от выполнения обработчика
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФорматПриЗаписи(Источник, Отказ) Экспорт
	Если Не ВыполнятьОбменПоСобытию(Источник, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	//TODO: Вызываем выгрузку сообщения по событию	
КонецПроцедуры

// Процедура-обработчик события "ПриЗаписи" документов
// для механизма оттравки объектов на узлах
// с настройкой событийной передачи данных
//
// Параметры:
//  ИмяПланаОбмена – Строка – имя плана обмена, для которого выполняется механизм регистрации
//  Источник       - ДокументОбъект - источник события
//  Отказ          - Булево - флаг отказа от выполнения обработчика
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФорматПриЗаписиДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	Если Не ВыполнятьОбменПоСобытию(Источник, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	//TODO: Вызываем выгрузку сообщения по событию	
КонецПроцедуры

// Процедура-обработчик события "ПриЗаписи" регистров
// для механизма отправки объектов на узлах
// с настройкой событийной передачи данных
//
// Параметры:
//  ИмяПланаОбмена – Строка – имя плана обмена, для которого выполняется механизм регистрации
//  Источник       - НаборЗаписейРегистра - источник события
//  Отказ          - Булево - флаг отказа от выполнения обработчика
//  Замещение      - Булево - признак замещения существующего набора записей
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФормат0ПриЗаписиРегистра(Источник, Отказ, Замещение) Экспорт
	Если Не ВыполнятьОбменПоСобытию(Источник, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	//TODO: Вызываем выгрузку сообщения по событию	
КонецПроцедуры

// Процедура-обработчик события "ПередУдалением" ссылочных типов данных для механизма регистрации объектов на узлах
//
// Параметры:
//  ИмяПланаОбмена – Строка – имя плана обмена, для которого выполняется механизм регистрации
//  Источник       - источник события
//  Отказ          - Булево - флаг отказа от выполнения обработчика
// 
Процедура СинхронизацияДанныхЧерезУниверсальныйФорматПередУдалением(Источник, Отказ) Экспорт
	Если Не ВыполнятьОбменПоСобытию(Источник, Отказ) Тогда
		Возврат;
	КонецЕсли;
	
	//TODO: Вызываем выгрузку сообщения по событию	
КонецПроцедуры

#EndRegion