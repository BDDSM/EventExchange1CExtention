#Область РаботаСНастройками

Функция КлючНастроек() Экспорт
	Возврат "202003051648НастройкиАтомарногоОбмена";
КонецФункции

Функция СтруктураНастроек() Экспорт
	настройки = Новый Структура;
	
	//соответствие узлов, для которых включена атомарная выгрузка
	//ключ = узел и значение = настройки для узла
	//в дальнейшем возможно хранение настроек каждого узла в своей структуре
	//например обработка транспорта сообщения
	Узлы = Новый Соответствие;
	настройки.Вставить("Узлы", Узлы);	
	
	настройки.Вставить("КоличествоПотоковВыгрузки", 10);	
	
	Возврат настройки;
КонецФункции

Функция НастройкиУзла(УзелОбмена) Экспорт
	Настройки = exch_ОбменДаннымиНастройки.Настройки();
	
	Узлы = Настройки.Узлы;
	Возврат Узлы.Получить(УзелОбмена);
КонецФункции
#КонецОбласти

Функция ЭтоМетаданныеСсылочногоТипаПовтИсп(ИмяОбъектаМетаданных) Экспорт
    Позиция = СтрНайти(ИмяОбъектаМетаданных, ".");
    Если Позиция > 0 Тогда 
        ИмяБазовогоТипа = Лев(ИмяОбъектаМетаданных, Позиция - 1);    
        Возврат ИмяБазовогоТипа = "Справочник"
            Или ИмяБазовогоТипа = "Документ"
            Или ИмяБазовогоТипа = "БизнесПроцесс"
            Или ИмяБазовогоТипа = "Задача"
            Или ИмяБазовогоТипа = "ПланСчетов"
            Или ИмяБазовогоТипа = "ПланОбмена"
            Или ИмяБазовогоТипа = "ПланВидовХарактеристик"
            Или ИмяБазовогоТипа = "ПланВидовРасчета";
    Иначе
        Возврат Ложь;
    КонецЕсли;    
КонецФункции

Функция ТекстЗапросаВыброркиЗарегистрированныхИзменений(УзелДляОбмена, ДляОтправки = Истина) Экспорт
	мета = УзелДляОбмена.Метаданные();
	схема = Новый СхемаЗапроса;								
		
	этоПервыйЗапрос = Истина;								
	ПакетЗапросов	= схема.ПакетЗапросов;	
	Для Каждого элт Из мета.Состав Цикл		
		Запрос = Неопределено;
		Если этоПервыйЗапрос Тогда			
			Запрос = ПакетЗапросов[0];
		Иначе
			Запрос = ПакетЗапросов.Добавить();
		КонецЕсли;
		оператор = Запрос.Операторы[0];
		этоПервыйЗапрос = Ложь;
		
		источник = оператор.Источники.Добавить(элт.Метаданные.ПолноеИмя()+".Изменения");	
		псевдоним = элт.Метаданные.Имя;
		источник.Источник.Псевдоним = псевдоним;
		оператор.ВыбираемыеПоля.Очистить();
		оператор.ВыбираемыеПоля.Добавить(СтрШаблон("""%1""", элт.Метаданные.ПолноеИмя()));
		Если exch_ОбменДаннымиПроверки.ЭтоМетаданныеСсылочногоТипа(элт.Метаданные) Тогда
			оператор.ВыбираемыеПоля.Добавить(СтрШаблон("%1.Ссылка", псевдоним));
		Иначе
			//добавить проверку на периодичность и подчененность регистратору
			//и признака основной отбор для измерения
			Для Каждого Измерение Из элт.Метаданные.Измерения Цикл
				Если Измерение.ОсновнойОтбор Тогда
					оператор.ВыбираемыеПоля.Добавить(СтрШаблон("%1.%2", псевдоним, Измерение.Имя));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ДляОтправки = Истина Тогда
			оператор.Отбор.Добавить(СтрШаблон("%1.НомерСообщения IS NULL", псевдоним));			
		Иначе
			оператор.Отбор.Добавить(СтрШаблон("%1.НомерСообщения = &НомерСообщения", псевдоним));
		КонецЕсли;
		оператор.Отбор.Добавить(СтрШаблон("%1.Узел = &УзелДляОбмена", псевдоним));
		Запрос.Колонки[0].Псевдоним = "ТипОбъекта";
	КонецЦикла;
	
	Возврат схема.ПолучитьТекстЗапроса();
КонецФункции
